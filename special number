{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPPRflvSO9hrqiV0VNfwwdM",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/LikithaSrinivas100/python-practice/blob/main/special%20number\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FcuxH7S2X3JU"
      },
      "outputs": [],
      "source": [
        "#programm to find special number\n",
        "#a 2 digit number is said to be a special number if the sum of sum of its digits and the product of its digits is equal to the number itself\n",
        "n = int(input())\n",
        "x = n//10\n",
        "print(\"first digit is :\", x)\n",
        "y = n%10\n",
        "print(\"second digit is :\", y)\n",
        "sum = x+y\n",
        "print(\"sum of first and second digit is :\", sum)\n",
        "product = x*y\n",
        "print(\"product of first and second digit is :\", product)\n",
        "if (sum + product) == n:\n",
        "    print(\"it is a special number\")\n",
        "else:\n",
        "    print(\"it is not a special number\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n = 19\n",
        "x = n//10        #to split 1st digit from the int (integer division)\n",
        "print(x)         #to split 2nd digit from the int (modulus division)\n",
        "y = n%10\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LSkJErFPbniv",
        "outputId": "b9bb7135-c67e-40d0-c3f2-56ee979982f7"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "9\n"
          ]
        }
      ]
    }
  ]
}